openapi: 3.1.0
x-stoplight:
  id: tgvfiv56rre5x
info:
  title: POS PAX Public API
  version: 0.6.8
  description: POS PAX API documentation
servers:
  - url: 'https://mxp-public-pos-api.dev.icadsistemi.com/v1'
    description: development
  - url: 'https://mxp-public-pos-api.prod.icadsistemi.com/v1'
    description: production
paths:
  '/cards/{track}':
    get:
      summary: Card info
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card-info'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      operationId: get-cards
      tags:
        - Cards
    parameters:
      - schema:
          type: string
        name: track
        in: path
        required: true
  '/cards/{track}/recharges/bills':
    parameters:
      - schema:
          type: string
        name: track
        in: path
        required: true
    get:
      summary: Get recharges bills
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RechargesBills'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      operationId: get-cards-track-recharges-bills
      tags:
        - Recharges
  '/cards/{track}/points':
    parameters:
      - schema:
          type: string
        name: track
        in: path
        required: true
    get:
      summary: Get card point balance
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PointsOutput'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      operationId: get-cards-track-points
      tags:
        - Rewards
  /configuration:
    get:
      summary: POS configuration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      operationId: get-configuration
      description: 'First endpoint to be called after login, returns POS configuration.'
      x-internal: false
      tags:
        - Configuration
    parameters: []
  /configuration/ack:
    parameters: []
    post:
      summary: ''
      operationId: post-configuration-ack
      responses:
        '200':
          description: OK
        '404':
          description: Terminal not found
        '422':
          description: Unprocessable Entity (malformed or missing input)
        '500':
          description: Internal Server Error
      description: 'Endpoint to call when a configuration phase (first or forced dll) is completed to inform the server about the result, success or not.'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  guid: 52f0277a-ef53-4e7f-a952-aa3eb7e94397
                  is_success: false
                  error_description: malformed input
              properties:
                guid:
                  type: string
                  description: Unique identifier for ACK request
                is_success:
                  type: boolean
                  description: Represent if the dll is completed with success or not
                error_description:
                  type: string
                  description: Inform the host about the error occurred. Present only if the request is a NACK
              required:
                - guid
                - is_success
        description: ''
  /fuelcoupons/reversal:
    post:
      summary: Reversal fuelcoupon
      operationId: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FuelcouponReversalOutput'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOutputError'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                transaction_id:
                  type: string
      description: send transactionid for reversal fuelcoupon request
    parameters: []
  /fuelcoupons/reversal/info:
    get:
      summary: Fuelcoupons Reversal info
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfoPosFuelcouponTransactionReversal'
        '401':
          description: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV)
        '500':
          description: Internal Server Error
      operationId: get-fuelcoupons-reversal-info
      parameters:
        - schema:
            type: string
          in: query
          name: fuelcoupon_code
          description: Fuelcoupon full code
  /fuelcoupons/validate:
    post:
      summary: Validate fuelcoupon
      operationId: post-fuelcoupons-validate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FuelcouponValidationOutput'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FuelcouponValidationInput'
  /recharges:
    post:
      summary: Recharge card
      operationId: post-recharges
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOutput'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RechargesInput'
      tags:
        - Recharges
      description: ''
  /recharges/reversal:
    post:
      summary: Reverse a card recharge
      operationId: post-recharges-reversal
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOutput'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RechargesReversalInput'
      description: ''
  /recharges/reversal/info:
    get:
      summary: Retrieve recharge info for reversal
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RechargesReversal'
              examples:
                Example 1:
                  value:
                    id: 529818
                    date_time: '2023-01-20T17:45:24Z'
                    bill: 100
                    bonus_credit: 20
                    update_required: false
                    requires_pin: true
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      operationId: get-recharges-reversal
      parameters:
        - schema:
            type: string
          in: query
          name: card_track
      tags:
        - Recharges
    parameters: []
  /rewards:
    parameters: []
    get:
      summary: Available rewards
      tags:
        - Available Rewards
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                description: List of campaign which has available rewards for the input card
                items:
                  $ref: '#/components/schemas/CampaignRewards'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      operationId: get-rewards-track
      description: 'For point cards, return the list of available rewards, filtering with available points and active campaigns.'
      parameters:
        - schema:
            type: string
          in: query
          name: card_track
  '/rewards/deliveries/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    patch:
      summary: ''
      operationId: patch-rewards-deliveries-id
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
      description: ''
  /rewards/pending:
    get:
      summary: Pending Reward
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PendingRewardsOutput'
        '401':
          description: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV)
        '500':
          description: Internal Server Error
      operationId: get-rewards-pending
      description: Get rewards pending
      parameters:
        - schema:
            type: string
          in: query
          name: card_track
  /rewards/pending/reversal:
    post:
      summary: ''
      operationId: post-rewards-pending-reversal
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOutputError'
        '500':
          description: Internal Server Error
      description: Reverse a pending reward and restore cards points
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reward_request_id:
                  type: integer
                  description: Pending reward identifier to reverse
                card_track:
                  type: string
                  description: Card track used for original transaction
              required:
                - reward_request_id
                - card_track
        description: ''
  /rewards/request:
    post:
      summary: Reward request
      operationId: post-rewards-request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RewardMemoRequest'
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOutput'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardMemoErrorResponse'
      description: Used for reward request and for reversal of an existing reward request
  /supplies/datacollection:
    get:
      summary: Retrieve last supplies from a pump
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    supply_id:
                      type: integer
                      description: ID of the supply. This will be send to the server to purchase it and perform a transaction.
                    quantity:
                      type: number
                      description: Supplied quantity of the product
                    unit_price:
                      type: number
                      description: Unit price of the product
                    amount:
                      type: number
                      description: Total amount
                    product:
                      type: string
                      description: Product name
                  required:
                    - supply_id
                    - quantity
                    - unit_price
                    - amount
                    - product
        '401':
          description: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV)
      operationId: get-supplies-datacollection
      description: Used to get the last 10 supplies from a specific pump of a fuel station with the new data collection active.
      parameters:
        - schema:
            type: integer
          in: query
          name: pump
          description: Number of the pump
  /transactions/info:
    get:
      summary: Retrieve info to perform an oil or nonoil transaction
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplies-info'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      operationId: get-transaction-info
      description: ''
      parameters:
        - schema:
            type: string
          in: query
          name: card_track
      tags:
        - Transactions
    parameters: []
  /transactions:
    post:
      summary: Transaction supply
      operationId: post-transactions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplyOutput'
                description: Supply response data
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      description: Used to validate and registered a supply using a payment card.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplyInput'
              description: Oil supply request data
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Auth Bearer token
      tags:
        - Transactions
    parameters: []
  /transactions/preauth:
    post:
      summary: Preauth request
      operationId: post-transactions-preauth
      responses:
        '200':
          description: OK. You need to check inside the body to retrieve the preauth request result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreauthResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      description: Used to check if the card has enough credit to perform the operation.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreauthRequest'
              description: Preauth request data
      tags:
        - Transactions
  /transactions/points:
    post:
      summary: Transaction points
      operationId: post-transactions-points
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOutput'
        '400':
          description: Bad Request
      description: Card points transaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardPointsTransactionInput'
  /transactions/points/reversal:
    post:
      summary: Reversal transaction points
      operationId: post-transactions-points-reversal
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOutput'
        '500':
          description: Internal Server Error
      description: 'Endpoint used to reverse a points transaction '
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PointsReversalInput'
    parameters: []
  /transactions/reversal/info:
    get:
      summary: Transaction reversal info
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfoPosTransactionReversal'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity (WebDAV)
        '500':
          description: Internal Server Error
      operationId: get-devices-pax-reversal-info
      parameters:
        - schema:
            type: string
          in: query
          name: card_track
      tags:
        - Transactions
      description: The endpoint is used to return the last reversable transaction related to that card and terminal.
    parameters: []
  /transactions/reversal/oil:
    post:
      summary: Transaction reversal oil
      operationId: post-transactions-reversal-oil
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOutputWithIccData'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OilTransactionReversalInput'
          application/xml:
            schema:
              type: object
              properties: {}
          multipart/form-data:
            schema:
              type: object
              properties: {}
          text/html:
            schema:
              type: object
              properties: {}
          text/plain:
            schema:
              type: object
              properties: {}
components:
  schemas:
    Configuration:
      type: object
      x-examples:
        Example 1:
          terminal_id: '0'
          supplier_id: 6
          card_types:
            - id: 2
              name: RICARICABILE
              code: 3
            - id: 3
              name: SCONTO
              code: 1
            - id: 4
              name: RACCOLTA PUNTI
              code: 4
            - id: 5
              name: FINEMESE
              code: 2
            - id: 6
              name: BUONO CARB.
              code: 6
          measure_units:
            - id: 1
              name: Lt
              measure_unit: L
            - id: 2
              name: Kg
              measure_unit: W
            - id: 3
              name: N.
              measure_unit: U
            - id: 4
              name: Ore
              measure_unit: H
          enabled_card_types:
            - 2
            - 3
            - 4
            - 5
            - 6
          articles:
            - id: 22
              name: Ricarica welfare2
              unit_price: 1
              is_oil: false
              measure_unit_id: 3
            - id: 60
              name: Buoni carburante
              unit_price: 1
              is_oil: false
              measure_unit_id: 3
            - id: 3049
              name: ACCESSORI
              is_oil: false
              measure_unit_id: 3
            - id: 3076
              name: OLIO
              is_oil: false
              measure_unit_id: 1
            - id: 3456
              name: PARCHEGGIO
              is_oil: false
              measure_unit_id: 3
            - id: 3705
              name: LAVAGGIO BUS
              is_oil: false
              measure_unit_id: 3
            - id: 3729
              name: ADBLUE TANICA
              is_oil: false
              measure_unit_id: 3
            - id: 4162
              name: PROVA2
              is_oil: false
              measure_unit_id: 1
            - id: 4163
              name: GNL
              is_oil: false
              measure_unit_id: 1
            - id: 4902
              name: Marca da bollo
              unit_price: 2
              is_oil: false
              measure_unit_id: 3
            - id: 5815
              name: Spese carta
              unit_price: 1.5
              is_oil: false
              measure_unit_id: 3
            - id: 6244
              name: Marca da bollo
              unit_price: 2
              is_oil: false
              measure_unit_id: 3
            - id: 6315
              name: HVO
              is_oil: false
              measure_unit_id: 1
          ticket:
            header:
              - content: '        PV TEST BRESCIA'
                font: large
              - content: '       Via Orzinuovi, 17'
                font: medium
              - content: '       25125 Brescia (BS)'
                font: medium
      description: First/Forced dll
      examples: []
      properties:
        terminal_id:
          type: string
        supplier_id:
          type: integer
        card_types:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              code:
                type: integer
        measure_units:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              measure_unit:
                type: string
        enabled_card_types:
          type: array
          items:
            type: integer
        articles:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              is_oil:
                type: boolean
              unit_price:
                type: number
              measure_unit_id:
                type: integer
        ticket:
          type: object
          properties:
            header:
              type: array
              items:
                type: object
                properties:
                  content:
                    type: string
                  font:
                    type: string
        card_types_operations:
          type: object
          description: "This object shows the possible operations for each card type.\nThe keys represents the card type id.\n\nAvailable operations are:\n\tT  --> transaction\n\tS  --> transaction reversal\n\tR  --> recharge\n\tSR --> recharge reversal\n\tRG --> card daily residue\n\tSP --> balance point\n\tPR --> reward request\n\tRP --> reward delivery\n\tLP --> available rewards list and pending rewards list\n\tSPR --> reward request reversal"
          properties:
            '1':
              type: array
              items:
                type: string
            '2':
              type: array
              items:
                type: string
            ..:
              type: array
              items:
                type: string
        data_collection:
          type: object
          description: Details about data collection of the fuelstationof the terminal
          required:
            - has_data_collection
            - pumps
          properties:
            has_data_collection:
              type: boolean
              description: 'If true, this terminal has the data collection active and can retrieve last transactions data'
            pumps:
              type: integer
              description: Number of the pumps in the fuel station
        guid:
          type: string
          description: 'Represent the dll unique identifier '
        payment_modes:
          type: object
          properties:
            recharges:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  '':
                    type: string
            data_collection:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  '':
                    type: string
      required:
        - card_types_operations
        - data_collection
        - guid
    Card-info:
      type: object
      x-examples:
        Example 1:
          id: 0
          is_enabled: true
          type_id: 0
      description: Card type and status informations
      properties:
        is_enabled:
          type: boolean
        type_id:
          type: integer
        update_required:
          type: boolean
    Supplies-info:
      type: object
      x-examples:
        Example 1:
          customer_data:
            - 2
            - 3
          articles:
            - 3
            - 4
            - 8
          requires_pin: true
      properties:
        customer_data:
          type: array
          items:
            type: integer
        articles:
          type: object
          properties:
            id:
              type: integer
            is_oil:
              type: boolean
        requires_pin:
          type: boolean
        update_required:
          type: boolean
    Supplies:
      title: Supplies
      x-stoplight:
        id: 8db3394aaad8f
      type: array
      description: Represent a set of supplied articles contained in a single transaction
      x-internal: false
      items:
        type: object
        properties:
          id:
            type: number
          date_time:
            type: string
          article_name:
            type: string
            description: name of the article
          amount:
            type: number
            description: amount of the transaction
          unit_price:
            type: number
            description: unit price of the transaction
          quantity:
            type: number
            description: quantity of the transaction
          is_oil:
            type: boolean
    InfoPosTransactionReversal:
      title: InfoPosTransactionReversal
      x-stoplight:
        id: 3holszdjt79rb
      type: object
      examples: []
      properties:
        update_required:
          type: boolean
          description: true if the terminal must update its settings
        requires_pin:
          type: boolean
          description: 'true if the pin mandatory for the next reversal '
        total_amount:
          type: number
          description: 'Transaction total amount, the sum of each article amount'
        articles:
          $ref: '#/components/schemas/Supplies'
          description: articles model of the transaction
      required:
        - update_required
        - requires_pin
        - total_amount
        - articles
    InfoPosFuelcouponTransactionReversal:
      title: InfoPosTransactionReversal
      type: object
      examples: []
      x-stoplight:
        id: 73011bf09c558
      properties:
        id:
          type: integer
          description: transaction id unique
        date_time:
          type: string
          format: date-time
          description: data time of the transaction
          readOnly: true
        articles:
          $ref: '#/components/schemas/Supplies'
          description: articles model of the transaction
    RechargesReversal:
      title: RechargesReversal
      x-stoplight:
        id: zcwnf9vyzktqx
      type: object
      properties:
        id:
          type: integer
          description: id unique
        date_time:
          type: string
          format: date-time
          readOnly: true
        bill:
          type: number
        bonus_credit:
          type: number
        update_required:
          type: boolean
          description: true if the terminal must update its settings
        requires_pin:
          type: boolean
          description: 'true if the pin mandatory for the next reversal '
    CampaignRewards:
      title: CampaignRewards
      x-stoplight:
        id: qjbhk1o80xtrn
      type: object
      description: A campaign with all its rewards
      properties:
        id:
          type: integer
          description: ID of the campaign
        name:
          type: string
          description: Name of the campaign
        type:
          type: integer
          description: |-
            Allowed values are:

            - 1: this is a OIL campaign
            - 2: this is a NON OIL campaign
            - 3: this is a mixed campaign
        rewards:
          type: array
          description: Arrray of available rewards
          items:
            $ref: '#/components/schemas/Reward'
      required:
        - id
        - name
        - type
        - rewards
    RechargesInput:
      type: object
      x-examples:
        Example 1:
          card_track: 70055730001000057=2209009000615800000
          bill_id: 53
          pin: 68B4E28A576654D1
          payment_mode: 2
          key_label: QT_IFSF
          random_pin_key: 2C9E11B025F712CA37437D853BD6E7D4
          transaction_id: ''
      properties:
        card_track:
          type: string
        bill_id:
          type: integer
        pin:
          type: string
        payment_mode:
          type: integer
        key_label:
          type: string
        random_pin_key:
          type: string
        transaction_id:
          type: string
      required:
        - card_track
        - bill_id
        - pin
        - key_label
        - random_pin_key
        - transaction_id
    RechargesBills:
      type: object
      properties:
        bills:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              amount:
                type: integer
              bonus_credit:
                type: integer
        update_required:
          type: boolean
      x-examples:
        Example 1:
          bills:
            - id: 15
              amount: 50
              bonus_credit: 1
          update_required: false
    PreauthRequest:
      title: PreauthRequest
      x-stoplight:
        id: t7g43q1jbdgvy
      type: object
      description: Used to create a preauthorization request
      properties:
        card_track:
          type: string
          description: 'Track of the used card. Example: 70055730001000057=2209009000615800000'
        random_pin_key:
          type: string
          description: Random pin key used to generate the session encryption key
        label_key:
          type: string
          description: Label used to recognize which key use on server side
        crypted_pin:
          type: string
          description: The pin encrypted with the session key
        datetime:
          type: string
          description: Datetime of the request
          format: date-time
        total_amount:
          type: number
          description: Amount requested to be authorized
        tran_id:
          type: integer
          description: Transaction id
      required:
        - card_track
        - random_pin_key
        - label_key
        - crypted_pin
        - datetime
        - total_amount
        - tran_id
    PreauthResponse:
      title: PreauthResponse
      x-stoplight:
        id: 6nlcd7ng8mgkw
      type: object
      properties:
        action_code:
          type: string
          description: The action code is the status of the request. Action codes starting with '0' are considered as a positive response.
        approval_code:
          type: string
          description: Approval code generated for positive responses.
        authorized_amount:
          type: number
          description: The authorized amount with this request
        available_products:
          type: array
          description: Products available for this card
          items:
            type: string
        vehicle_plate:
          type: string
          description: Option vehicle plate binded to the card
        icc_data:
          type: string
          description: 'ICC data, for EMV transactions'
        balance_amount:
          type: number
          description: Total balance amount
      required:
        - action_code
        - approval_code
        - authorized_amount
        - available_products
        - vehicle_plate
        - icc_data
        - balance_amount
    SupplyInput:
      title: SupplyInput
      x-stoplight:
        id: 4d6cd59623de0
      type: object
      description: Input model for the supplies requests
      properties:
        card_track:
          type: string
          description: 'Track of the used card. Example: 70055730001000057=2209009000615800000'
        tran_id:
          type: integer
          description: Transaction id
        supplies_ov_ids:
          type: array
          description: 'List of supplies ids retrieved by datacollection. If present, "products" shouldn''t be present'
          items:
            type: integer
        products:
          type:
            - array
          description: |-
            List of products bought.
            If present, "supplies_ov_ids" shouldn't be present
          items:
            $ref: '#/components/schemas/Products'
        random_pin_key:
          type: string
          description: Random pin key used to generate the session encryption key
        label_key:
          type: string
          description: Label used to recognize which key use on server side
        crypted_pin:
          type: string
          description: The pin encrypted with the session key
        date_time:
          type: string
          description: 'Request date time '
        total_amount:
          type: number
          description: Transaction's total amount that the host should authorize
        km:
          type: integer
          description: Vehicle's kilometers
        driver_code:
          type: integer
        vehicle_code:
          type: string
        gt_info:
          $ref: '#/components/schemas/ExternalGtInfo'
          description: Contains the information related to an external gt
        chip_info:
          $ref: '#/components/schemas/ChipInfo'
          description: 'Contains the information related to the chip '
      required:
        - card_track
        - tran_id
        - random_pin_key
        - label_key
        - crypted_pin
        - date_time
        - total_amount
    SupplyOutput:
      type: object
      x-examples:
        Example 1:
          action_code: '000'
          approval_code: '123'
          vehicle_plate: 12ABC34
          icc_data: DF2003ABCDEF
      description: Output model for the supplies requests
      examples: []
      properties:
        ticket:
          type: array
          items:
            type: object
            properties:
              content:
                type: string
              font:
                type: string
            required:
              - content
              - font
        display:
          type: array
          items:
            type: object
            properties:
              content:
                type: string
              font:
                type: string
            required:
              - content
              - font
        action_code:
          type: string
          description: The action code is the status of the request. Action codes starting with '0' are considered as a positive response.
        approval_code:
          type: string
          description: Approval code generated for positive responses.
        vehicle_plate:
          type: string
          description: Option vehicle plate binded to the card
        icc_data:
          type: string
          description: 'ICC data, for EMV transactions'
      required:
        - ticket
        - display
        - action_code
      x-stoplight:
        id: a2e452ceca0f5
      title: ''
    PointsOutput:
      type: object
      properties:
        points:
          type: integer
      x-examples:
        Example 1:
          points: 0
    RechargesReversalInput:
      type: object
      properties:
        card_track:
          type: string
        recharge_id:
          type: integer
        pin:
          type: string
        key_label:
          type: string
        random_pin_key:
          type: string
        transaction_id:
          type: string
      x-examples:
        Example 1:
          card_track: 1234567890=12345678900987654321
          recharge_id: 531303
          pin: IFGHERYIGEGTRH
          key_label: ASDFGHJ
          random_pin_key: GERGRDHE6HVJYJ TRJFJTYJRTJ
          transaction_id: '32894987453'
    Output:
      type: object
      x-examples:
        Example 1:
          result: '000'
      properties:
        result:
          type: string
        ticket:
          type: string
    GenericOutput:
      type: object
      properties:
        result:
          type: string
        ticket:
          type: array
          items:
            type: object
            properties:
              content:
                type: string
              font:
                type: string
        display:
          type: array
          items:
            type: object
            properties:
              content:
                type: string
              font:
                type: string
      x-examples:
        Example 1:
          result: '000'
          ticket:
            - content: Ricarica effettuata!
              font: test
            - content: 'Importo: 500.00'
            - content: 'Abbuono: 0.00'
            - content: 'Saldo tessera: 3510.00'
          display:
            - content: Ricarica effettuata!
              font: test
            - content: 'Importo: 500.00'
            - content: 'Abbuono: 0.00'
            - content: 'Saldo tessera: 3510.00'
    GenericOutputWithIccData:
      type: object
      x-examples:
        Example 1:
          result: '000'
          ticket:
            - content: Ricarica effettuata!
              font: test
            - content: 'Importo: 500.00'
            - content: 'Abbuono: 0.00'
            - content: 'Saldo tessera: 3510.00'
          display:
            - content: Ricarica effettuata!
              font: test
            - content: 'Importo: 500.00'
            - content: 'Abbuono: 0.00'
            - content: 'Saldo tessera: 3510.00'
      x-stoplight:
        id: 5aec8640f98c3
      title: GenericOutputWithIccData
      description: Used to model a standard transaction output with icc_data included
      properties:
        result:
          type: string
        ticket:
          type: array
          items:
            type: object
            properties:
              content:
                type: string
              font:
                type: string
        display:
          type: array
          items:
            type: object
            properties:
              content:
                type: string
              font:
                type: string
        icc_data:
          type: string
    OilTransactionReversalInput:
      type: object
      properties:
        reversal_transaction_id:
          type: integer
        pin:
          type: string
        key_label:
          type: string
        random_pin_key:
          type: string
        transaction_id:
          type: integer
        card_track:
          type: string
      x-examples:
        Example 1:
          reversal_transaction_id: 123
          pin: '1234567890'
          key_label: ''
          random_pin_key: ''
          transaction_id: 124
          card_track: ''
    PendingRewardsOutput:
      title: PendingRewardsOutput
      x-stoplight:
        id: g1ko07ezok0jh
      type: object
      description: pending rewards model output
      properties:
        reward_request_id:
          type: integer
        reward_name:
          type: string
        datetime:
          type: string
          format: date-time
        points:
          type: number
    Reward:
      title: Reward
      x-stoplight:
        id: y5yi4u10nmluk
      type: object
      properties:
        id:
          type: integer
          description: id reward
        name:
          type: string
          description: reward name
        points:
          type: string
          description: point reward
        is_fuelcoupon:
          type: string
          description: true if the reward is a fuelcoupon
      required:
        - id
        - name
        - points
        - is_fuelcoupon
    RewardMemoRequest:
      title: RewardRequest
      x-stoplight:
        id: 3a6j33tlj7yvy
      type: object
      description: reward request
      properties:
        campaign_id:
          type: integer
          description: campaign id identifier
        reward_id:
          type: integer
          description: reward identifier
        card_track:
          type: string
          description: Card Track
        transaction_number:
          type: integer
          description: 'set autoincrement transaction number '
        timestamp:
          type: string
          format: date-time
          description: 'Transaction date time '
      required:
        - campaign_id
        - reward_id
        - card_track
        - transaction_number
        - timestamp
    RewardMemoErrorResponse:
      title: RewardMemoErrorResponse
      x-stoplight:
        id: 4sqnsqugsjbjh
      type: object
      properties:
        code:
          type: string
          description: internal code
        errorDetails:
          type: string
          description: error details
        message:
          type: string
          description: type error
    FuelcouponValidationInput:
      type: object
      x-examples:
        Example 1:
          fuelcoupon_code: '0000000000009906970358268'
          transaction_id: 53c786b82d124fadb1e8e374
      properties:
        fuelcoupon_code:
          type: string
        transaction_id:
          type: string
          description: Mandatory only if multiple fuelcoupon code are used for transaction
      required:
        - fuelcoupon_code
    FuelcouponValidationOutput:
      type: object
      x-examples:
        Example 1:
          display:
            - font: medium
              message: aa
          transaction_id: 53c786b82d124fadb1e8e374
          locked_amount: 10
      title: FuelcouponValidationOutput
      properties:
        display:
          type: array
          description: Display data
          items:
            type: object
            properties:
              font:
                type: string
              message:
                type: string
            required:
              - font
              - message
        transaction_id:
          type: string
          description: 'This identifier is used to relates the fuelcoupons to the same transaction. So for the same transaction, if the user wants to use multiple fuelcoupons, the POS should send everytime the same transaction_id for each call to this API'
        locked_amount:
          type: integer
          description: Available amount for the used fuelcoupon
      required:
        - display
        - transaction_id
        - locked_amount
    FuelcouponReversalOutput:
      type: object
      properties:
        ticket:
          type: array
          items:
            type: object
            properties:
              content:
                type: string
              font:
                type: string
        display:
          type: array
          items:
            type: object
            properties:
              content:
                type: string
              font:
                type: string
        transaction_id:
          type: integer
      x-stoplight:
        id: 60d2727931a93
    GenericOutputError:
      type: object
      x-stoplight:
        id: a0dfc79c3995e
      properties:
        ticket:
          type: array
          items:
            type: object
            properties:
              content:
                type: string
              font:
                type: string
        display:
          type: array
          items:
            type: object
            properties:
              content:
                type: string
              font:
                type: string
        result:
          type: string
    CardPointsTransactionInput:
      type: object
      x-examples:
        Example 1:
          gross_amount: 20
          net_amount: 0
          quantity: 10.78
          km: 100
          unit_price: 1.856
          notes: asd asd asdf
          extra_code: 0
          is_standalone: false
          item_id: 23
          pan: '70055740001000049'
          points: 0
          transaction_number: 0
          timestamp: '2023-07-11T16:18:43Z'
          is_oil: false
          is_reversal: true
      properties:
        card_track:
          type: string
          description: Represent the card track
        transaction_id:
          type: integer
          description: Represent the transaction identifier
        supplies_ov_ids:
          type: string
          description: Represent each supply id selected by the user
        date_time:
          type: string
          description: Represent the transaction datetime
        total_amount:
          type: number
          description: Total amount for transaction
        km:
          type: integer
          description: 'Km inserted by the user, if requested during transaction'
        driver_code:
          type: integer
          description: 'Driver code inserted by the user, if requested during transaction'
        products:
          type: array
          items:
            $ref: '#/components/schemas/Products'
      examples: []
    ExternalGtInfo:
      title: ExternalGtInfo
      x-stoplight:
        id: mkvtbtobg0yya
      type: object
      description: 'Input model for the information required only for external GTs (eg: DKV)'
      properties:
        pos_data_code:
          type: string
        function_code:
          type: string
        message_reason_code:
          type: string
        batch_number:
          type: string
        currency_code:
          type: string
        service_level:
          type: string
        delivery_note_number:
          type: string
        default_vat:
          type: string
    ChipInfo:
      title: ChipInfo
      x-stoplight:
        id: zvrnbibi21ohj
      type: object
      description: Input model for the information required only EMV cards.
      properties:
        icc_related_data:
          type: string
        unencrypted_id:
          type: string
        work_order:
          type: string
        vehicle_number:
          type: string
        driver_id:
          type: string
    Products:
      title: Products
      x-stoplight:
        id: jsu39o0m0p2fq
      type: object
      properties:
        id:
          type: integer
          description: Product identifier
        quantity:
          type: number
          description: Product supplied quantity
        unit_price:
          type: number
          description: Product unit price
        amount:
          type: number
          description: Product amount (quantity * unit_price)
        is_oil:
          type: boolean
          description: 'If true, is an oil product, otherwise is a not oil product'
      required:
        - id
        - quantity
        - unit_price
        - amount
        - is_oil
      description: Represent a single product present in a transaction
    PointsReversalInput:
      title: PointsReversalInput
      x-stoplight:
        id: fm33hg9vx8xwq
      type: object
      properties:
        card_track:
          type: string
          description: Represent the card track
        transaction_id:
          type: integer
          description: Represent the transaction identifier
        supplies:
          type: array
          description: Represent the all transaction elements to revert
          items:
            type: object
            properties:
              id:
                type: integer
                description: Represent the single element transaction identifier
              is_oil:
                type: boolean
                description: 'Information about single element transaction typology: true if oil, false if not oil'
            required:
              - id
              - is_oil
      required:
        - card_track
        - transaction_id
        - supplies
  securitySchemes:
    Cognito:
      type: oauth2
      flows:
        password:
          tokenUrl: ''
          refreshUrl: ''
          scopes: {}
      description: ''
  responses: {}
security:
  - Cognito: []
