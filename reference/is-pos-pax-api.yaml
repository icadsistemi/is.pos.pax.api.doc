openapi: 3.1.0
x-stoplight:
  id: tgvfiv56rre5x
info:
  title: POS PAX Public API
  version: 0.6.44
  description: |
    # POS PAX API documentation

    The HTTP status codes returned by the endpoints follow these rules:
    - If the flow is correct, returns positive response code (even if the transaction fails for example for an handled reason, like incorrect PIN)
    - If the flow is incorrect, returns negative response code 
    - If the flow breaks for some reason (DB connection, malformed input, etc..), returns negative response

    # Action Codes

    Description about returned action codes

    | Code | Description                                         | Display message |
    | ---- | --------------------------------------------------- | --------------- |
    | 000  | Transaction Ok                                      |            | 
    | 001  | Card disabled                                       | Carta disabilitata |
    | 002  | Card not found                                      | Carta non trovata |
    | 003  | Card maximal is not enough                          | Massimale non sufficiente |
    | 004  | Card credit exhausted                               | Credito esaurito |
    | 005  | Card expired                                        | Carta scaduta |
    | 006  | Card type not found                                 | Tipo tessera non valido | 
    | 007  | Products not availables                             | Prodotti non disponibili |
    | 008  | Card credit is not enough                           | Credito insufficiente |
    | 009  | Customer disabled                                   | Cliente disabilitato |
    | 010  | Customer credit exhausted                           | Credito esaurito |
    | 011  | Card not enabled for indoor operations              | Carta disabilitata su POS |
    | 012  | Customer not enabled on current fuel station        | Cliente disabilitato sul punto vendita |
    | 013  | Card circuit non enabled on on current fuel station | Circuito non valido sul punto vendita |
    | 014  | Incorrect card PIN                                  | PIN errato |
    | 015  | Request not available                               | Errore transazione |
    | 016  | Fuel station not found                              | Punto vendita non trovato |
    | 400  | Reversal transaction Ok                             | |
    | 401  | Reversal transaction already done                   | Storno gi√† eseguito |
    | 402  | Original transaction not found                      | Transazione originale non trovata |
    | 904  | Format error / Missing input                        | Errore transazione |
servers:
  - url: 'https://mxp-public-pos-api.dev.icadsistemi.com/v1'
    description: development
  - url: 'https://mxp-public-pos-api.prod.icadsistemi.com/v1'
    description: production
paths:
  '/cards/{track}':
    get:
      summary: Card info
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card-info'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      operationId: get-cards
      tags:
        - Cards
    parameters:
      - schema:
          type: string
        name: track
        in: path
        required: true
  '/cards/{track}/recharges/bills':
    parameters:
      - schema:
          type: string
        name: track
        in: path
        required: true
    get:
      summary: Get recharges bills
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RechargesBills'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      operationId: get-cards-track-recharges-bills
      tags:
        - Recharges
  '/cards/{track}/points':
    parameters:
      - schema:
          type: string
        name: track
        in: path
        required: true
    get:
      summary: Get card point balance
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PointsOutput'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      operationId: get-cards-track-points
      tags:
        - Rewards
  '/cards/{track}/residue':
    parameters:
      - schema:
          type: string
        name: track
        in: path
        required: true
    post:
      summary: Get card residue
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  residue:
                    type: number
                    format: float
                  action_code:
                    type: string
                    x-stoplight:
                      id: oicjpk62evv4s
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV)
        '500':
          description: Internal Server Error
      operationId: get-card-residue
      tags:
        - Rewards
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                crypted_pin:
                  type: string
                label_key:
                  type: string
                random_pin_key:
                  type: string
                source:
                  type: string
                is_ticket_residue:
                  type: string
                  description: 'If true, return ticket card residue. If false, return transaction card residue.'
              required:
                - crypted_pin
                - label_key
                - random_pin_key
                - source
  /closures:
    get:
      summary: Used to obtain closure terminal data
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOutput'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity (WebDAV)
      operationId: get-closures
      description: |-
        It can be used to get closure data of the current period or for a previous closure.
        In the second case, it receives a datetime as input to determine the range of the requested closure.
      parameters:
        - schema:
            type: string
          in: query
          name: closure_datetime
          description: 'Optional. If set, the endpoint will look for an old closure that include the requested datetime. The format for this timestamp is UNIX time in s (example: 1697444252)'
  /closures/reset:
    post:
      summary: ''
      operationId: post-closures-reset
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOutput'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      description: |-
        After the terminal has printed its closure receipt, it can call this endpoint to close the closure process and reset all the counts.
        So, the next closure, will start from the moment when this closure has been reset.
  /configuration:
    get:
      summary: POS configuration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      operationId: get-configuration
      description: 'First endpoint to be called after login, returns POS configuration.'
      x-internal: false
      tags:
        - Configuration
    parameters: []
    post:
      summary: Save POS configuration
      operationId: post-configuration
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
      description: Save POS configuration as JSON
  /configuration/print:
    get:
      summary: POS configuration print
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOutput'
              examples:
                Example 1:
                  value:
                    action_code: '000'
                    ticket:
                      - content: '        STAMPA DI PROVA'
                        font: large
                    display:
                      - content: 'TERMINALE:                   003'
                        font: medium
                      - content: 'ISCODE:                 is316002'
                        font: medium
                      - content: 'RETE:             ICAD Sis PROVA'
                        font: medium
                      - content: 'SERIAL NUMBER:            XXYY01'
                        font: medium
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV)
        '500':
          description: Internal Server Error
      operationId: get-configuration-print
      description: 'returns POS configuration data as a receipt rerady to be printed '
      x-internal: false
      tags:
        - Configuration
      parameters:
        - schema:
            type: string
          in: query
          name: serial_number
          description: serial number
          required: true
        - schema:
            type: string
          in: query
          name: sw_version
          description: software version
          required: true
        - schema:
            type: string
          in: query
          name: api_url
          description: 'api url for environment '
      requestBody:
        content: {}
    parameters: []
  /configuration/ack:
    parameters: []
    post:
      summary: ''
      operationId: post-configuration-ack
      responses:
        '200':
          description: OK
        '404':
          description: Terminal not found
        '422':
          description: Unprocessable Entity (malformed or missing input)
        '500':
          description: Internal Server Error
      description: 'Endpoint to call when a configuration phase (first or forced dll) is completed to inform the server about the result, success or not.'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  guid: 52f0277a-ef53-4e7f-a952-aa3eb7e94397
                  is_success: false
                  error_description: malformed input
              properties:
                guid:
                  type: string
                  description: Unique identifier for ACK request
                is_success:
                  type: boolean
                  description: Represent if the dll is completed with success or not
                error_description:
                  type: string
                  description: Inform the host about the error occurred. Present only if the request is a NACK
              required:
                - guid
                - is_success
        description: ''
  '/configuration/gt/{issuer}/keys':
    parameters:
      - schema:
          type: string
        name: issuer
        in: path
        required: true
    get:
      summary: Get configuration keys for GT issuer
      tags: []
      responses: {}
      operationId: get-configuration-gt-isuer-keys
      description: |-
        Available issuers:
        - DKV
  '/configuration/gt/{issuer}/params':
    parameters:
      - schema:
          type: string
        name: issuer
        in: path
        required: true
    get:
      summary: Get configuration params for GT issuer
      tags: []
      responses: {}
      operationId: get-configuration-gt-issuer-params
      description: |-
        Available issuers:
        - DKV
  /fuelcoupons/abort:
    delete:
      summary: Abort fuel coupon transaction
      operationId: delete-fuelcoupons-abort
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOutput'
      description: Used to abort a fuel coupon transaction. It's used if the validation phase is interrupted.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                transaction_code:
                  type: string
              required:
                - transaction_code
          application/xml:
            schema:
              type: object
              properties: {}
      tags:
        - Fuelcoupons
  /fuelcoupons/activate:
    post:
      summary: Activate fuelcoupons
      operationId: activate-fuelcoupons
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOutput'
      tags:
        - Fuelcoupons
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                fuelcoupon_codes:
                  type: array
                  items:
                    type: string
              x-examples:
                Example 1:
                  fuelcoupon_codes:
                    - '0000000000009961511269694'
                    - '0000000000009922799362682'
                    - '0000000000009940137197369'
                    - '0000000000009979607505144'
                    - '0000000000009956422989229'
      description: ''
    parameters: []
  /fuelcoupons/reversal/info:
    get:
      summary: Fuelcoupons Reversal info
      tags:
        - Fuelcoupons
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfoPosFuelcouponReversalOutput'
        '401':
          description: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV)
        '500':
          description: Internal Server Error
      operationId: get-fuelcoupons-reversal-info
      parameters:
        - schema:
            type: string
          in: query
          name: fuelcoupon_code
          description: Fuelcoupon full code
  /fuelcoupons/reversal/validate:
    post:
      summary: Validate fuelcoupon
      operationId: post-fuelcoupons-validate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FuelcouponReversalValidationOutput'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FuelcouponReversalValidationInput'
      tags:
        - Fuelcoupons
      description: Used to validate a fuel ccoupon before a reversal operation.
    parameters: []
  /fuelcoupons/validate:
    post:
      summary: Validate fuelcoupon
      operationId: post-fuelcoupons-reversal-validate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FuelcouponValidationOutput'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FuelcouponValidationInput'
      tags:
        - Fuelcoupons
  /recharges:
    post:
      summary: Recharge card
      operationId: post-recharges
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOutput'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RechargesInput'
      tags:
        - Recharges
      description: ''
  /recharges/reversal:
    post:
      summary: Reverse a card recharge
      operationId: post-recharges-reversal
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOutput'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RechargesReversalInput'
      description: ''
  /recharges/reversal/info:
    get:
      summary: Retrieve recharge info for reversal
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RechargesReversal'
              examples:
                Example 1:
                  value:
                    id: 529818
                    date_time: '2023-01-20T17:45:24Z'
                    bill: 100
                    bonus_credit: 20
                    update_required: false
                    requires_pin: true
        '204':
          description: 'No Content: it''s returned if no reversable recharges are found'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      operationId: get-recharges-reversal
      parameters:
        - schema:
            type: string
          in: query
          name: card_track
      tags:
        - Recharges
    parameters: []
  /rewards:
    parameters: []
    get:
      summary: Available rewards
      tags:
        - Available Rewards
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                description: List of campaign which has available rewards for the input card
                items:
                  $ref: '#/components/schemas/CampaignRewards'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      operationId: get-rewards-track
      description: 'For point cards, return the list of available rewards, filtering with available points and active campaigns.'
      parameters:
        - schema:
            type: string
          in: query
          name: card_track
  '/rewards/deliveries/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    patch:
      summary: ''
      operationId: patch-rewards-deliveries-id
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
      description: ''
  /rewards/pending:
    get:
      summary: Pending Reward
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PendingRewardsOutput'
        '401':
          description: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV)
        '500':
          description: Internal Server Error
      operationId: get-rewards-pending
      description: Get rewards pending
      parameters:
        - schema:
            type: string
          in: query
          name: card_track
  /rewards/pending/reversal:
    post:
      summary: ''
      operationId: post-rewards-pending-reversal
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOutput'
        '500':
          description: Internal Server Error
      description: Reverse a pending reward and restore cards points
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reward_request_id:
                  type: integer
                  description: Pending reward identifier to reverse
                card_track:
                  type: string
                  description: Card track used for original transaction
              required:
                - reward_request_id
                - card_track
        description: ''
  /rewards/request:
    post:
      summary: Reward request
      operationId: post-rewards-request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RewardMemoRequest'
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOutput'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardMemoErrorResponse'
      description: Used for reward request and for reversal of an existing reward request
  /supplies/datacollection:
    get:
      summary: Retrieve last supplies from a pump
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    supply_id:
                      type: integer
                      description: ID of the supply. This will be send to the server to purchase it and perform a transaction.
                    article_id:
                      type: integer
                      description: Supplied article id
                    quantity:
                      type: number
                      description: Supplied quantity of the product
                    unit_price:
                      type: number
                      description: Unit price of the product
                    amount:
                      type: number
                      description: Total amount
                    product:
                      type: string
                      description: Product name
                    measure_unit:
                      type: string
                      description: 'The product measure unit display name. Eg: Lt, Kg, h'
                  required:
                    - supply_id
                    - article_id
                    - quantity
                    - unit_price
                    - amount
                    - product
                    - measure_unit
        '401':
          description: Unauthorized
        '422':
          description: Unprocessable Entity (WebDAV)
      operationId: get-supplies-datacollection
      description: Used to get the last 10 supplies from a specific pump of a fuel station with the new data collection active.
      parameters:
        - schema:
            type: integer
          in: query
          name: pump
          description: Number of the pump
        - schema:
            type: string
          in: query
          name: card_track
          description: Transacted card track
  /transactions:
    post:
      summary: Transaction supply
      operationId: post-transactions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOutputTransaction'
                description: Supply response data
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      description: Used to validate and registered a supply using a payment card.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplyInput'
              description: Oil supply request data
        description: ''
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Auth Bearer token
      tags:
        - Transactions
    parameters: []
  /transactions/ack:
    post:
      summary: Transactions ACK
      operationId: post-transactions-ack
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOutput'
          headers:
            header-0:
              schema:
                type: string
        '422':
          description: |-
            Unprocessable Entity (WebDAV)
            Input is malformed
      description: |-
        Endpoint to close transactions, need to be called at the end of payment operations to receive the formatted receipts and moreover inform data-collection how the supplies are payed (in case DC is enabled).
        In case of multipayments and multiproducts in the same transaction, it will trigger an error.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionAckInput'
        description: ''
  /transactions/fuelcoupons:
    post:
      summary: Fuelcoupon transaction
      operationId: post-transactions-fuelcoupons
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOutputTransaction'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FuelcouponTransactionInput'
      tags:
        - Fuelcoupons
  /transactions/fuelcoupons/reversal:
    post:
      summary: Reversal fuelcoupon transaction
      operationId: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FuelcouponReversalOutput'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOutput'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FuelcouponTransactionReversalInput'
        description: ''
      description: Send transactionid for reversal fuelcoupon request
      tags:
        - Fuelcoupons
    parameters: []
  /transactions/info:
    get:
      summary: Retrieve info to perform an oil or nonoil transaction
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplies-info'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      operationId: get-transaction-info
      description: ''
      parameters:
        - schema:
            type: string
          in: query
          name: card_track
          required: true
        - schema:
            type: string
          in: query
          name: df42
          description: Represents the vehicle plate in hex (only for chip cards)
        - schema:
            type: string
          in: query
          name: df30
          description: Represents the customer data required for transaction (only for chip cards)
      tags:
        - Transactions
    parameters: []
  /transactions/gt:
    post:
      summary: Transaction supply for external GT cards
      operationId: post-transactions-gt
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOutputTransaction'
                description: Supply response data
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      description: Used to validate and registered a supply using a payment card.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplyInput'
              description: Oil supply request data
        description: ''
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Auth Bearer token
      tags:
        - Transactions
    parameters: []
  /transactions/preauth:
    post:
      summary: Preauth request
      operationId: post-transactions-preauth
      responses:
        '200':
          description: OK. You need to check inside the body to retrieve the preauth request result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreauthResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      description: Used to check if the card has enough credit to perform the operation.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreauthRequest'
              description: Preauth request data
      tags:
        - Transactions
  /transactions/points:
    post:
      summary: Transaction points
      operationId: post-transactions-points
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOutput'
        '400':
          description: Bad Request
      description: Card points transaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardPointsTransactionInput'
  /transactions/points/reversal:
    post:
      summary: Reversal transaction points
      operationId: post-transactions-points-reversal
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOutput'
        '500':
          description: Internal Server Error
      description: 'Endpoint used to reverse a points transaction '
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PointsReversalInput'
    parameters: []
  /transactions/reversal:
    post:
      summary: Transaction Reversal
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOutput'
      operationId: post-transactions-reversal
      description: The endpoint is used to reverse a transaction.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionReversalInput'
  /transactions/gt/reversal:
    post:
      summary: Transaction Reversal Gt
      operationId: post-transactions-reversal-gt
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOutput'
      description: The endpoint is used to reverse a GT transaction.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionReversalInput'
    parameters: []
  /transactions/reversal/info:
    get:
      summary: Transaction reversal info
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfoPosTransactionReversalOutput'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity (WebDAV)
        '500':
          description: Internal Server Error
      operationId: get-devices-pax-reversal-info
      parameters:
        - schema:
            type: string
          in: query
          name: card_track
      tags:
        - Transactions
      description: The endpoint is used to return the last reversable transaction related to that card and terminal.
    parameters: []
components:
  schemas:
    TransactionsData:
      title: TransactionsData
      type: object
      description: Represent a single product present in a transaction
      x-stoplight:
        id: 1a83411be6fbd
      properties:
        article_id:
          type: integer
          description: Article identifier
        article_name:
          type: string
          description: Article name
          x-stoplight:
            id: wojafr92gkdcx
        quantity:
          type: number
          description: Article supplied quantity
        unit_price:
          type: number
          description: Article unit price
        amount:
          type: number
          description: Article amount (quantity * unit_price)
        is_oil:
          type: boolean
          description: 'If true, is an oil article, otherwise is a not oil article'
        discounted_value:
          type: number
          description: Conditional data - Present only if there's a discount applied. Representing the applied discount value on unit price
          x-stoplight:
            id: e0ij4xxdym0xp
        discounted_amount:
          type: number
          description: Conditional data - Present only if there's a discount applied. Representing the amount with applied discount
          x-stoplight:
            id: wv3rn9q3gmojx
        ov_supply_id:
          type: integer
          description: Conditional data - Present only if the transaction is selected with DC
        measure_unit:
          type: string
          description: Article's measure unit
        payment_name:
          type: string
          x-stoplight:
            id: qzkm0jx9biorb
        card_track:
          type: string
          x-stoplight:
            id: 7rk28ugbjgpp4
        fuelcoupon_code:
          type: integer
          x-stoplight:
            id: smanys77n2o0y
        fuelcoupon_number:
          type: string
          x-stoplight:
            id: eci9zcq4tglgl
        stan:
          type: number
          x-stoplight:
            id: qsuw3i1szwxfv
        customer_data:
          type: object
          x-stoplight:
            id: uod9cquo71niz
          properties:
            km:
              type: number
              x-stoplight:
                id: 6u9p0j1ngyfcs
            driver_code:
              type: number
              x-stoplight:
                id: 7aixy7rtus66k
        date_time:
          type: string
          x-stoplight:
            id: 09uv2j9r305yd
          format: date-time
        progressive_number:
          type: integer
          x-stoplight:
            id: fw773lk5d6bjn
      required:
        - article_name
        - quantity
        - unit_price
        - amount
        - is_oil
        - measure_unit
        - payment_name
        - stan
        - date_time
        - progressive_number
    CampaignRewards:
      title: CampaignRewards
      x-stoplight:
        id: qjbhk1o80xtrn
      type: object
      description: A campaign with all its rewards
      properties:
        id:
          type: integer
          description: ID of the campaign
        name:
          type: string
          description: Name of the campaign
        type:
          type: integer
          description: |-
            Allowed values are:

            - 1: this is a OIL campaign
            - 2: this is a NON OIL campaign
            - 3: this is a mixed campaign
        rewards:
          type: array
          description: Arrray of available rewards
          items:
            $ref: '#/components/schemas/Reward'
      required:
        - id
        - name
        - type
        - rewards
    CardPointsTransactionInput:
      type: object
      x-examples:
        Example 1:
          gross_amount: 20
          net_amount: 0
          quantity: 10.78
          km: 100
          unit_price: 1.856
          notes: asd asd asdf
          extra_code: 0
          is_standalone: false
          item_id: 23
          pan: '70055740001000049'
          points: 0
          transaction_number: 0
          timestamp: '2023-07-11T16:18:43Z'
          is_oil: false
          is_reversal: true
      examples: []
      properties:
        card_track:
          type: string
          description: Represent the card track
        transaction_number:
          type: integer
          description: Represent the transaction identifier
        supplies_ov_ids:
          type: string
          description: Represent each supply id selected by the user
        date_time:
          type: string
          description: Represent the transaction datetime
        total_amount:
          type: number
          description: Total amount for transaction
        km:
          type: integer
          description: 'Km inserted by the user, if requested during transaction'
        driver_code:
          type: integer
          description: 'Driver code inserted by the user, if requested during transaction'
        products:
          type: array
          items:
            $ref: '#/components/schemas/Products'
    Card-info:
      type: object
      x-examples:
        Example 1:
          id: 0
          is_enabled: true
          type_id: 0
      description: Card type and status informations
      properties:
        is_enabled:
          type: boolean
        type_id:
          type: integer
        update_required:
          type: boolean
    ChipInfo:
      title: ChipInfo
      x-stoplight:
        id: zvrnbibi21ohj
      type: object
      description: Input model for the information required only EMV cards.
      properties:
        icc_related_data:
          type: string
        unencrypted_id:
          type: string
        work_order:
          type: string
        vehicle_number:
          type: string
        driver_id:
          type: string
        is_offline:
          type: boolean
          description: True if the transaction with EMV chip is performed offline
    Configuration:
      type: object
      x-examples:
        Example 1:
          terminal_id: '0'
          supplier_id: 6
          card_types:
            - id: 2
              name: RICARICABILE
              code: 3
            - id: 3
              name: SCONTO
              code: 1
            - id: 4
              name: RACCOLTA PUNTI
              code: 4
            - id: 5
              name: FINEMESE
              code: 2
            - id: 6
              name: BUONO CARB.
              code: 6
          measure_units:
            - id: 1
              name: Lt
              measure_unit: L
            - id: 2
              name: Kg
              measure_unit: W
            - id: 3
              name: N.
              measure_unit: U
            - id: 4
              name: Ore
              measure_unit: H
          enabled_card_types:
            - 2
            - 3
            - 4
            - 5
            - 6
          articles:
            - id: 22
              name: Ricarica welfare2
              unit_price: 1
              is_oil: false
              measure_unit_id: 3
            - id: 60
              name: Buoni carburante
              unit_price: 1
              is_oil: false
              measure_unit_id: 3
            - id: 3049
              name: ACCESSORI
              is_oil: false
              measure_unit_id: 3
            - id: 3076
              name: OLIO
              is_oil: false
              measure_unit_id: 1
            - id: 3456
              name: PARCHEGGIO
              is_oil: false
              measure_unit_id: 3
            - id: 3705
              name: LAVAGGIO BUS
              is_oil: false
              measure_unit_id: 3
            - id: 3729
              name: ADBLUE TANICA
              is_oil: false
              measure_unit_id: 3
            - id: 4162
              name: PROVA2
              is_oil: false
              measure_unit_id: 1
            - id: 4163
              name: GNL
              is_oil: false
              measure_unit_id: 1
            - id: 4902
              name: Marca da bollo
              unit_price: 2
              is_oil: false
              measure_unit_id: 3
            - id: 5815
              name: Spese carta
              unit_price: 1.5
              is_oil: false
              measure_unit_id: 3
            - id: 6244
              name: Marca da bollo
              unit_price: 2
              is_oil: false
              measure_unit_id: 3
            - id: 6315
              name: HVO
              is_oil: false
              measure_unit_id: 1
          ticket:
            header:
              - content: '        PV TEST BRESCIA'
                font: large
              - content: '       Via Orzinuovi, 17'
                font: medium
              - content: '       25125 Brescia (BS)'
                font: medium
      description: First/Forced dll
      examples: []
      properties:
        terminal_id:
          type: string
        supplier_id:
          type: integer
        card_types:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              code:
                type: integer
              is_gt:
                type: boolean
                x-stoplight:
                  id: 3fqor74n42fdf
                description: True if this is an external gt cards
        measure_units:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              measure_unit:
                type: string
        enabled_card_types:
          type: array
          items:
            type: integer
        articles:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              is_oil:
                type: boolean
              unit_price:
                type: number
              measure_unit_id:
                type: integer
              precision:
                type: integer
        ticket:
          type: object
          properties:
            header:
              type: array
              items:
                type: object
                properties:
                  content:
                    type: string
                  font:
                    type: string
        card_types_operations:
          type: object
          description: "This object shows the possible operations for each card type.\nThe keys represents the card type id.\n\nAvailable operations are:\n\tT  --> transaction\n\tS  --> transaction reversal\n\tR  --> recharge\n\tSR --> recharge reversal\n\tRG --> card daily residue\n\tSP --> balance point\n\tPR --> reward request\n\tRP --> reward delivery\n\tLP --> available rewards list \n\tLPP --> pending rewards list\n\tSPR --> reward request reversal\n\tAB --> Activate fuelcoupons"
          properties:
            '1':
              type: array
              items:
                type: string
            '2':
              type: array
              items:
                type: string
            ..:
              type: array
              items:
                type: string
        data_collection:
          type: object
          description: Details about data collection of the fuelstationof the terminal
          required:
            - has_data_collection
            - pumps
          properties:
            has_data_collection:
              type: boolean
              description: 'If true, this terminal has the data collection active and can retrieve last transactions data'
            pumps:
              type: integer
              description: Number of the pumps in the fuel station
        guid:
          type: string
          description: 'Represent the dll unique identifier '
        payment_modes:
          type: object
          properties:
            recharges:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
            data_collection:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
        passwords:
          type: object
          x-stoplight:
            id: tg18q1p77pom6
          properties:
            password_manager:
              x-stoplight:
                id: pjfitwzu5cul7
              type: string
            password_installer:
              type: string
              x-stoplight:
                id: 26omqwwwgtqi3
            '':
              type: string
              x-stoplight:
                id: 4abf745vun4t1
        circuits:
          type: object
          x-stoplight:
            id: 61u9rib1sbz16
          properties:
            fuel_cards:
              type: boolean
              x-stoplight:
                id: j2ixiewi1masa
            fuelcoupons:
              type: boolean
              x-stoplight:
                id: 5x0ttgv6robli
            credit_cards:
              type: boolean
              x-stoplight:
                id: 4zm8henvrfhgs
      required:
        - card_types_operations
        - data_collection
        - guid
    ConfigurationPrint:
      type: object
      x-stoplight:
        id: 8c5jblucfrd8y
      x-examples:
        Example 1:
          terminal_id: '0'
          supplier_id: 6
          card_types:
            - id: 2
              name: RICARICABILE
              code: 3
            - id: 3
              name: SCONTO
              code: 1
            - id: 4
              name: RACCOLTA PUNTI
              code: 4
            - id: 5
              name: FINEMESE
              code: 2
            - id: 6
              name: BUONO CARB.
              code: 6
          measure_units:
            - id: 1
              name: Lt
              measure_unit: L
            - id: 2
              name: Kg
              measure_unit: W
            - id: 3
              name: N.
              measure_unit: U
            - id: 4
              name: Ore
              measure_unit: H
          enabled_card_types:
            - 2
            - 3
            - 4
            - 5
            - 6
          articles:
            - id: 22
              name: Ricarica welfare2
              unit_price: 1
              is_oil: false
              measure_unit_id: 3
            - id: 60
              name: Buoni carburante
              unit_price: 1
              is_oil: false
              measure_unit_id: 3
            - id: 3049
              name: ACCESSORI
              is_oil: false
              measure_unit_id: 3
            - id: 3076
              name: OLIO
              is_oil: false
              measure_unit_id: 1
            - id: 3456
              name: PARCHEGGIO
              is_oil: false
              measure_unit_id: 3
            - id: 3705
              name: LAVAGGIO BUS
              is_oil: false
              measure_unit_id: 3
            - id: 3729
              name: ADBLUE TANICA
              is_oil: false
              measure_unit_id: 3
            - id: 4162
              name: PROVA2
              is_oil: false
              measure_unit_id: 1
            - id: 4163
              name: GNL
              is_oil: false
              measure_unit_id: 1
            - id: 4902
              name: Marca da bollo
              unit_price: 2
              is_oil: false
              measure_unit_id: 3
            - id: 5815
              name: Spese carta
              unit_price: 1.5
              is_oil: false
              measure_unit_id: 3
            - id: 6244
              name: Marca da bollo
              unit_price: 2
              is_oil: false
              measure_unit_id: 3
            - id: 6315
              name: HVO
              is_oil: false
              measure_unit_id: 1
          ticket:
            header:
              - content: '        PV TEST BRESCIA'
                font: large
              - content: '       Via Orzinuovi, 17'
                font: medium
              - content: '       25125 Brescia (BS)'
                font: medium
      description: configuration print model
      examples: []
      properties:
        terminal_id:
          type: string
        supplier_id:
          type: integer
        card_types:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              code:
                type: integer
        measure_units:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              measure_unit:
                type: string
        enabled_card_types:
          type: array
          items:
            type: integer
        articles:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              is_oil:
                type: boolean
              unit_price:
                type: number
              measure_unit_id:
                type: integer
              precision:
                type: integer
        ticket:
          type: object
          properties:
            header:
              type: array
              items:
                type: object
                properties:
                  content:
                    type: string
                  font:
                    type: string
        card_types_operations:
          type: object
          description: "This object shows the possible operations for each card type.\nThe keys represents the card type id.\n\nAvailable operations are:\n\tT  --> transaction\n\tS  --> transaction reversal\n\tR  --> recharge\n\tSR --> recharge reversal\n\tRG --> card daily residue\n\tSP --> balance point\n\tPR --> reward request\n\tRP --> reward delivery\n\tLP --> available rewards list \n\tLPP --> pending rewards list\n\tSPR --> reward request reversal\n\tAB --> Activate fuelcoupons"
          properties:
            '1':
              type: array
              items:
                type: string
            '2':
              type: array
              items:
                type: string
            ..:
              type: array
              items:
                type: string
        data_collection:
          type: object
          description: Details about data collection of the fuelstationof the terminal
          required:
            - has_data_collection
            - pumps
          properties:
            has_data_collection:
              type: boolean
              description: 'If true, this terminal has the data collection active and can retrieve last transactions data'
            pumps:
              type: integer
              description: Number of the pumps in the fuel station
        guid:
          type: string
          description: 'Represent the dll unique identifier '
        payment_modes:
          type: object
          properties:
            recharges:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
            data_collection:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
        passwords:
          type: object
          x-stoplight:
            id: tg18q1p77pom6
          properties:
            password_manager:
              x-stoplight:
                id: pjfitwzu5cul7
              type: string
            password_installer:
              type: string
              x-stoplight:
                id: 26omqwwwgtqi3
      required:
        - card_types_operations
        - data_collection
        - guid
    ExternalGtInfo:
      title: ExternalGtInfo
      x-stoplight:
        id: mkvtbtobg0yya
      type: object
      description: 'Input model for the information required only for external GTs (eg: DKV)'
      properties:
        pos_data_code:
          type: string
          description: Representing pos informations using a specific encoding. Refer to IFSF documentation
        message_reason_code:
          type: string
          description: |-
            Representing the reason why the request is done. Refer to IFSF documentation.
            Conditional attribute: present only in reversal messages.
        batch_number:
          type: string
          description: Hardcoded to 1.
      required:
        - pos_data_code
        - batch_number
    FuelcouponReversalOutput:
      type: object
      x-stoplight:
        id: 60d2727931a93
      properties:
        ticket:
          type: array
          items:
            type: object
            properties:
              content:
                type: string
              font:
                type: string
        display:
          type: array
          items:
            type: object
            properties:
              content:
                type: string
              font:
                type: string
    FuelcouponTransactionInput:
      title: FuelcouponTransactionInput
      x-stoplight:
        id: cgke55ls3jdn1
      type: object
      properties:
        transaction_number:
          type: integer
        transaction_code:
          type: string
        supplies_ov_ids:
          type: array
          items:
            type: integer
        articles:
          type: array
          items:
            $ref: '#/components/schemas/Products'
        date_time:
          type: string
          format: date-time
    FuelcouponTransactionReversalInput:
      type: object
      x-examples:
        Example 1:
          transaction_number: 2
          original_transaction_code: 9aa1e62c5b30ec5abc81e471
          original_transaction_date_time: '2023-10-04T14:36:59.816Z'
          reversal_transaction_date_time: '2023-10-04T15:36:59.816Z'
      properties:
        transaction_number:
          type: integer
        receipt_number:
          type: integer
          x-stoplight:
            id: y5v305bssxehw
        transaction_code:
          type: string
          x-stoplight:
            id: ytnmkaaxkrml5
        original_transaction_code:
          type: string
          x-stoplight:
            id: ytnmkaaxkrml5
        reversal_transaction_date_time:
          type: string
          x-stoplight:
            id: m30g6qibyqom1
      required:
        - transaction_number
        - receipt_number
        - transaction_code
        - original_transaction_code
        - reversal_transaction_date_time
    FuelcouponValidationInput:
      type: object
      x-examples:
        Example 1:
          fuelcoupon_code: '0000000000009906970358268'
          transaction_id: 53c786b82d124fadb1e8e374
      properties:
        fuelcoupon_code:
          type: string
        transaction_code:
          type: string
          description: Mandatory only if multiple fuelcoupon code are used for transaction
      required:
        - fuelcoupon_code
    FuelcouponReversalValidationInput:
      type: object
      x-stoplight:
        id: q3mlfck95rfz7
      x-examples:
        Example 1:
          fuelcoupon_code: '0000000000009906970358268'
          transaction_id: 53c786b82d124fadb1e8e374
      properties:
        fuelcoupons_codes:
          type: array
          x-stoplight:
            id: 6yutc921pmq0u
          items:
            x-stoplight:
              id: hoijxeyzqjw5l
            type: string
      required:
        - fuelcoupons_codes
      title: ''
    FuelcouponValidationOutput:
      type: object
      x-examples:
        Example 1:
          display:
            - font: medium
              message: aa
          transaction_id: 53c786b82d124fadb1e8e374
          locked_amount: 10
      title: FuelcouponValidationOutput
      examples: []
      properties:
        display:
          type: array
          description: Display data
          items:
            type: object
            properties:
              font:
                type: string
              message:
                type: string
            required:
              - font
              - message
        transaction_code:
          type: string
          description: 'This identifier is used to relates the fuelcoupons to the same transaction. So for the same transaction, if the user wants to use multiple fuelcoupons, the POS should send everytime the same transaction_id for each call to this API'
        locked_amount:
          type: integer
          description: Available amount for the used fuelcoupon
        fuel_coupon_number:
          type: integer
      required:
        - display
        - transaction_code
        - locked_amount
        - fuel_coupon_number
    FuelcouponReversalValidationOutput:
      type: object
      x-stoplight:
        id: lrzn5uvqw0ycl
      x-examples:
        Example 1:
          display:
            - font: medium
              message: aa
          transaction_id: 53c786b82d124fadb1e8e374
          locked_amount: 10
      title: FuelcouponReversalValidationOutput
      examples: []
      properties:
        display:
          type: array
          description: Display data
          items:
            type: object
            properties:
              font:
                type: string
              message:
                type: string
            required:
              - font
              - message
        transaction_code:
          type: string
          description: This identifier is used to relates the fuelcoupons to the same transaction. The identifier returned here must be used for further validations (if needed) and for the final supply operation.
        err_fuel_coupon_number:
          type: integer
          x-stoplight:
            id: ytt7ap5o70w6d
          description: Number of the first fuel coupon that threw a validation error (if any)
      required:
        - display
        - transaction_code
    GenericOutput:
      type: object
      x-examples:
        Example 1:
          result: '000'
          ticket:
            - content: Ricarica effettuata!
              font: test
            - content: 'Importo: 500.00'
            - content: 'Abbuono: 0.00'
            - content: 'Saldo tessera: 3510.00'
          display:
            - content: Ricarica effettuata!
              font: test
            - content: 'Importo: 500.00'
            - content: 'Abbuono: 0.00'
            - content: 'Saldo tessera: 3510.00'
      properties:
        action_code:
          type: string
          description: |-
            Representing the operation status:
            - 000: Transaction Ok
            - 001: Disabled Card
            ..
        ticket:
          type: array
          description: 'Representing the ticket data to print '
          items:
            type: object
            properties:
              content:
                type: string
                description: The content to print
              font:
                type: string
                description: 'The content font, could be "large" or "medium"'
            required:
              - content
              - font
        display:
          type: array
          description: Representing the data to show on display
          items:
            type: object
            properties:
              content:
                type: string
                description: The content to show on display
              font:
                type: string
                description: 'The content font, could be "large" or "medium"'
            required:
              - content
              - font
        icc_related_data:
          type: string
          description: 'Conditional attribute, present only in case of chip Card. Represent the Chip Data '
      required:
        - action_code
        - display
    GenericOutputTransaction:
      type: object
      x-examples:
        Example 1:
          result: '000'
          ticket:
            - content: Ricarica effettuata!
              font: test
            - content: 'Importo: 500.00'
            - content: 'Abbuono: 0.00'
            - content: 'Saldo tessera: 3510.00'
          display:
            - content: Ricarica effettuata!
              font: test
            - content: 'Importo: 500.00'
            - content: 'Abbuono: 0.00'
            - content: 'Saldo tessera: 3510.00'
      x-stoplight:
        id: 397ea325f2d9b
      title: GenericOutputTransaction
      description: Used to model a standard transaction output
      properties:
        action_code:
          type: string
          description: |-
            Representing the operation status:
            - 000: Transaction Ok
            - 001: Disabled Card
            ..
        vehicle_plate:
          type: string
          description: Conditional data - Present only if there's a plate associated to the card
        icc_related_data:
          type: string
          description: Conditional data - Present only in chip card cases
        auth_code:
          type: string
          x-stoplight:
            id: uylf0d4jl7acq
          description: 6 digits authorization code
        transactions:
          type: array
          description: Conditional data - Present only if the transaction passed. Represent the bought articles with informations about eventual discounts applied
          items:
            $ref: '#/components/schemas/TransactionsData'
            x-stoplight:
              id: 0jgpse19ixsp5
        display:
          type: array
          description: Representing the data to show on display
          items:
            type: object
            properties:
              content:
                type: string
                description: The content to show on display
              font:
                type: string
                description: 'The content font, could be "large" or "medium"'
            required:
              - content
              - font
        ticket:
          type: array
          description: 'Representing the ticket data to print '
          items:
            type: object
            properties:
              content:
                type: string
                description: The content to print
              font:
                type: string
                description: 'The content font, could be "large" or "medium"'
            required:
              - content
              - font
      required:
        - action_code
        - display
    InfoPosTransactionReversalOutput:
      title: InfoPosTransactionReversalOutput
      x-stoplight:
        id: 46719292afb87
      type: object
      examples: []
      properties:
        update_required:
          type: boolean
          description: true if the terminal must update its settings
        requires_pin:
          type: boolean
          description: 'true if the pin mandatory for the next reversal '
        total_amount:
          type: number
          description: 'Transaction total amount, the sum of each article amount'
        original_transaction_number:
          type: integer
          description: Reversable transaction number
        original_transaction_date_time:
          type: string
          description: Reversable transaction date time
          format: date-time
        supplies:
          $ref: '#/components/schemas/Supplies'
          description: supplies model of the transaction
      required:
        - update_required
        - requires_pin
        - total_amount
        - original_transaction_number
        - original_transaction_date_time
        - supplies
    InfoPosFuelcouponReversalOutput:
      title: InfoPosTransactionReversal
      type: object
      examples:
        - update_required: true
          requires_pin: true
          total_amount: 0
          original_transaction_number: 0
          original_transaction_date_time: '2019-08-24T14:15:22Z'
          supplies:
            - - article_name: string
                amount: 0
                unit_price: 0
                quantity: 0
                is_oil: true
                fuelcoupon_id: 0
                fuelcoupon_number: string
      x-stoplight:
        id: bdba3ad4dad12
      properties:
        update_required:
          type: boolean
          description: true if the terminal must update its settings
        requires_pin:
          type: boolean
          description: 'true if the pin mandatory for the next reversal '
        total_amount:
          type: number
          description: 'Transaction total amount, the sum of each article amount'
        original_transaction_number:
          type: integer
          description: Reversable transaction number
        original_transaction_date_time:
          type: string
          format: date-time
          description: Reversable transaction date time
          readOnly: true
        original_transaction_code:
          type: string
          description: Code used when performing the actual revesal request
        supplies:
          description: supplies model of the transaction
          type: array
          items:
            $ref: '#/components/schemas/SuppliesFuelcoupon'
      required:
        - update_required
        - requires_pin
        - total_amount
        - original_transaction_number
        - original_transaction_date_time
        - original_transaction_code
        - supplies
    PinDataInput:
      title: PinDataInput
      x-stoplight:
        id: ncbboazy1xim2
      type: object
      properties:
        crypted_pin:
          type: string
          description: The pin encrypted with the session key
        label_key:
          type: string
          description: Label used to recognize which key use on server side
        random_pin_key:
          type: string
          description: Random pin key used to generate the session encryption key
      required:
        - crypted_pin
        - label_key
        - random_pin_key
    PendingRewardsOutput:
      title: PendingRewardsOutput
      x-stoplight:
        id: g1ko07ezok0jh
      type: object
      description: pending rewards model output
      properties:
        reward_request_id:
          type: integer
        reward_name:
          type: string
        date_time:
          type: string
          format: date-time
        points:
          type: number
    PointsOutput:
      type: object
      properties:
        points:
          type: integer
      x-examples:
        Example 1:
          points: 0
    PointsReversalInput:
      title: PointsReversalInput
      x-stoplight:
        id: fm33hg9vx8xwq
      type: object
      properties:
        card_track:
          type: string
          description: Represent the card track
        transaction_number:
          type: integer
          description: Represent the transaction identifier
        supplies:
          type: array
          description: Represent the all transaction elements to revert
          items:
            type: object
            properties:
              id:
                type: integer
                description: Represent the single element transaction identifier
              is_oil:
                type: boolean
                description: 'Information about single element transaction typology: true if oil, false if not oil'
            required:
              - id
              - is_oil
      required:
        - card_track
        - transaction_number
        - supplies
    PreauthRequest:
      title: PreauthRequest
      x-stoplight:
        id: t7g43q1jbdgvy
      type: object
      description: Used to create a preauthorization request
      properties:
        card_track:
          type: string
          description: 'Track of the used card. Example: 70055730001000057=2209009000615800000'
        date_time:
          type: string
          description: Datetime of the request
          format: date-time
        total_amount:
          type: number
          description: Amount requested to be authorized
        transaction_number:
          type: integer
          description: Transaction id
        card_pin:
          $ref: '#/components/schemas/PinDataInput'
      required:
        - card_track
        - date_time
        - total_amount
        - transaction_number
    PreauthResponse:
      title: PreauthResponse
      x-stoplight:
        id: 6nlcd7ng8mgkw
      type: object
      properties:
        action_code:
          type: string
          description: The action code is the status of the request. Action codes starting with '0' are considered as a positive response.
        approval_code:
          type: string
          description: Approval code generated for positive responses.
        authorized_amount:
          type: number
          description: The authorized amount with this request
        available_products:
          type: array
          description: Products available for this card
          items:
            type: string
        vehicle_plate:
          type: string
          description: Option vehicle plate binded to the card
        icc_data:
          type: string
          description: 'ICC data, for EMV transactions'
        balance_amount:
          type: number
          description: Total balance amount
      required:
        - action_code
        - approval_code
        - authorized_amount
        - available_products
        - vehicle_plate
        - icc_data
        - balance_amount
    Products:
      title: Products
      x-stoplight:
        id: jsu39o0m0p2fq
      type: object
      description: Represent a single product present in a transaction
      properties:
        id:
          type: integer
          description: Product identifier
        quantity:
          type: number
          description: Product supplied quantity
        unit_price:
          type: number
          description: Product unit price
        amount:
          type: number
          description: Product amount (quantity * unit_price)
        is_oil:
          type: boolean
          description: 'If true, is an oil product, otherwise is a not oil product'
        discount_value:
          type: number
          description: Conditional data - Present only if there's a discount applied. Representing the applied discount value on unit price
        discounted_amount:
          type: number
          description: Conditional data - Present only if there's a discount applied. Representing the amount with applied discount
      required:
        - id
        - quantity
        - unit_price
        - amount
        - is_oil
    RechargesInput:
      type: object
      x-examples:
        Example 1:
          card_track: 70055730001000057=2209009000615800000
          bill_id: 53
          pin: 68B4E28A576654D1
          payment_mode: 2
          key_label: QT_IFSF
          random_pin_key: 2C9E11B025F712CA37437D853BD6E7D4
          transaction_id: ''
      examples: []
      properties:
        card_track:
          type: string
        bill_id:
          type: integer
        payment_mode:
          type: integer
        transaction_number:
          type: integer
        card_pin:
          $ref: '#/components/schemas/PinDataInput'
        custom_recharge_amount:
          type: integer
          x-stoplight:
            id: oq1otosjd7mkq
          description: 'Custom recharge bill, mutually exclusive with bill IDfield'
        custom_recharge_rebate:
          type: number
          x-stoplight:
            id: xq8j3cbabht41
      required:
        - card_track
        - payment_mode
        - transaction_number
        - card_pin
    RechargesBills:
      type: object
      x-examples:
        Example 1:
          bills:
            - id: 15
              amount: 50
              bonus_credit: 1
          update_required: false
      properties:
        bills:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              amount:
                type: integer
              bonus_credit:
                type: integer
              ecommerce:
                type: boolean
                x-stoplight:
                  id: 6b3xcemxcayth
                description: True if the bill is available ONLY for ecommerce
        update_required:
          type: boolean
    RechargesReversal:
      title: RechargesReversal
      x-stoplight:
        id: zcwnf9vyzktqx
      type: object
      properties:
        id:
          type: integer
          description: id unique
        date_time:
          type: string
          format: date-time
          readOnly: true
        bill:
          type: number
        bonus_credit:
          type: number
        update_required:
          type: boolean
          description: true if the terminal must update its settings
        requires_pin:
          type: boolean
          description: 'true if the pin mandatory for the next reversal '
    RechargesReversalInput:
      type: object
      x-examples:
        Example 1:
          card_track: 1234567890=12345678900987654321
          recharge_id: 531303
          pin: IFGHERYIGEGTRH
          key_label: ASDFGHJ
          random_pin_key: GERGRDHE6HVJYJ TRJFJTYJRTJ
          transaction_id: '32894987453'
      properties:
        card_track:
          type: string
        recharge_id:
          type: integer
        card_pin:
          $ref: '#/components/schemas/PinDataInput'
        transaction_number:
          type: integer
    RewardMemoErrorResponse:
      title: RewardMemoErrorResponse
      x-stoplight:
        id: 4sqnsqugsjbjh
      type: object
      properties:
        code:
          type: string
          description: internal code
        errorDetails:
          type: string
          description: error details
        message:
          type: string
          description: type error
    RewardMemoRequest:
      title: RewardRequest
      x-stoplight:
        id: 3a6j33tlj7yvy
      type: object
      description: reward request
      properties:
        campaign_id:
          type: integer
          description: campaign id identifier
        reward_id:
          type: integer
          description: reward identifier
        card_track:
          type: string
          description: Card Track
        transaction_number:
          type: integer
          description: 'set autoincrement transaction number '
        timestamp:
          type: string
          format: date-time
          description: 'Transaction date time '
      required:
        - campaign_id
        - reward_id
        - card_track
        - transaction_number
        - timestamp
    Reward:
      title: Reward
      x-stoplight:
        id: y5yi4u10nmluk
      type: object
      properties:
        id:
          type: integer
          description: id reward
        name:
          type: string
          description: reward name
        points:
          type: string
          description: point reward
        is_fuelcoupon:
          type: string
          description: true if the reward is a fuelcoupon
      required:
        - id
        - name
        - points
        - is_fuelcoupon
    Supplies:
      title: Supplies
      x-stoplight:
        id: 8db3394aaad8f
      type: array
      description: Represent a set of supplied articles contained in a single transaction with card
      x-internal: false
      items:
        type: object
        properties:
          article_name:
            type: string
            description: name of the article
          amount:
            type: number
            description: amount of the transaction
          unit_price:
            type: number
            description: unit price of the transaction
          quantity:
            type: number
            description: quantity of the transaction
          is_oil:
            type: boolean
            description: 'information about the selled articles: if oil or not'
          card_id:
            type: integer
            description: Card id used for the transaction
          card_pan:
            type: string
            description: Card Pan used for the transaction
          ov_id:
            type: integer
            description: 'Conditional attribute. Present only if the reverted transaction is selected using data collection '
          measure_unit:
            type: string
            description: Unit of measure involved in this transaction
          precision:
            type: integer
            description: Number of decimals of the unit price
    SuppliesFuelcoupon:
      title: SuppliesFuelcoupon
      type: array
      description: Represent a set of supplied articles contained in a single transaction with fuelcoupon
      x-internal: false
      x-stoplight:
        id: 07fb6cf08a08b
      items:
        type: object
        properties:
          article_name:
            type: string
            description: name of the article
          amount:
            type: number
            description: amount of the transaction
          unit_price:
            type: number
            description: unit price of the transaction
          quantity:
            type: number
            description: quantity of the transaction
          is_oil:
            type: boolean
            description: 'information about the selled articles: if oil or not'
          fuelcoupon_id:
            type: integer
            description: Fuelcoupon id used for the transaction
          fuelcoupon_number:
            type: string
            description: Fuelcoupon number used for the transaction
          ov_id:
            type: integer
            description: 'Conditional attribute. Present only if the reverted transaction is selected using data collection '
          precision:
            type: integer
          measure_unit:
            type: string
          ' fuelcoupon_code':
            type: string
            x-stoplight:
              id: eqgv64iog038q
    SupplyInput:
      title: SupplyInput
      x-stoplight:
        id: 4d6cd59623de0
      type: object
      description: Input model for the supplies requests
      properties:
        card_track:
          type: string
          description: 'Track of the used card. Example: 70055730001000057=2209009000615800000'
        transaction_number:
          type: integer
          description: Transaction id
        supplies_ov_ids:
          type: array
          description: List of supplies ids retrieved by datacollection.
          items:
            type: integer
        products:
          type:
            - array
          description: List of products bought.
          items:
            $ref: '#/components/schemas/Products'
        date_time:
          type: string
          description: 'Request date time '
        total_amount:
          type: number
          description: Transaction's total amount that the host should authorize
        km:
          type: integer
          description: Vehicle's kilometers
        driver_code:
          type: integer
          description: Driver code. Max 6 digits
        vehicle_code:
          type: string
        gt_info:
          $ref: '#/components/schemas/ExternalGtInfo'
          description: 'Conditional field: should be valorized only if the transaction is done with external Card Circuit'
        chip_info:
          $ref: '#/components/schemas/ChipInfo'
          description: |-
            Conditional Field: should be valorized only in case of chip card. 
            Contains the chip information
        card_pin:
          $ref: '#/components/schemas/PinDataInput'
          description: Card pin data
        driver_pin:
          $ref: '#/components/schemas/PinDataInput'
          description: Driver Pin data
        check_driver:
          type: boolean
          description: 'If True, the driver_code will be checked on backend. Otherwise, there are no controls on driver_code value.'
      required:
        - card_track
        - transaction_number
        - date_time
        - total_amount
    Supplies-info:
      type: object
      x-examples:
        Example 1:
          customer_data:
            - 2
            - 3
          articles:
            - 3
            - 4
            - 8
          requires_pin: true
      examples: []
      properties:
        customer_data:
          type: array
          description: |-
            Indicates the additional data required to perform a transaction. Each integer value represent a required customer data:
            1 - Km is required
            2 - Driver code is required
            3 - Vehicle plate is required
            4 - Unencrypted id is required
            5 - Work order\PO number is required
            6 - Vehicle number is required
          items:
            type: integer
        articles:
          type: object
          description: The list of available products for the transacted card
          properties:
            id:
              type: integer
            is_oil:
              type: boolean
        update_required:
          type: boolean
          description: Indicates if the terminal requires an update
        requires_card_pin:
          type: boolean
          description: Indicates if the card requires a pin for the transaction
        requires_driver_pin:
          type: boolean
          description: Indicates if the card requires a driver pin for the transaction
        requires_check_km:
          type: boolean
          description: Indicates if the POS need to compare the inserted km with the 'last_km' received. If km < last_km the POS should show a warning before proceed with the transaction
        last_km:
          type: integer
          description: Indicates the Km of last transaction
        vehicle_plate:
          type: string
          description: Decoded vehicle plate from chip data (df42 decoded)
      required:
        - articles
    TransactionAckInput:
      title: TransactionAckInput
      x-stoplight:
        id: ob68ydmp3sy6h
      type: object
      examples: []
      properties:
        supply_receipt_number:
          type: integer
          description: Receipt number to print on it
        loyalties:
          type: array
          description: List of loyalties cards used in transaction
          items:
            type: object
            properties:
              card_track:
                type: string
                description: Card track for the used one
            required:
              - card_track
        transactions:
          type: array
          x-stoplight:
            id: 4o57diwfb7e76
          items:
            $ref: '#/components/schemas/Transaction'
            x-stoplight:
              id: 1vclqvd4516sr
      required:
        - supply_receipt_number
        - transactions
    TransactionReversalInput:
      title: TransactionReversalInput
      x-stoplight:
        id: hd6ytj9owngj3
      type: object
      properties:
        card_track:
          type: string
          description: Card track used for the reversal transaction
        card_pin:
          $ref: '#/components/schemas/PinDataInput'
          description: 'Pin data, conditional based on card type'
        transaction_number:
          type: integer
          description: 'Transaction number '
        receipt_number:
          type: integer
          x-stoplight:
            id: omfqrrswqgr4u
        original_transaction_date_time:
          type: string
          description: Transaction date time to reverse
        original_transaction_number:
          type: integer
          description: Transaction number to reverse
        date_time:
          type: string
          format: date-time
          description: 'Reversal transaction date time '
        ov_supplies_ids:
          type: array
          description: Conditional Data. Echoed "ov_id" attribute returned by getInfoReversal in the supplies.
          items:
            type: integer
        gt_info:
          $ref: '#/components/schemas/ExternalGtInfo'
          description: 'Conditional field: should be valorized only if the transaction is done with external Card Circuit'
        chip_info:
          $ref: '#/components/schemas/ChipInfo'
          description: |-
            Conditional Field: should be valorized only in case of chip card. 
            Contains the chip information
      required:
        - card_track
        - transaction_number
        - original_transaction_date_time
        - original_transaction_number
        - date_time
    Transaction:
      title: Transaction
      x-stoplight:
        id: 05r82tbo7papq
      type: object
      properties:
        payment_name:
          type: string
          x-stoplight:
            id: 247prn7wwgi3o
          description: Payment mode name to print on receipt
        card_track:
          type: string
          x-stoplight:
            id: 4g3c6my5t4owj
          description: 'Card track for the used one. It is a conditional field, present only if the payment mode require it. Eg: is not present for fuelcoupons'
        fuelcoupon_code:
          type: string
          x-stoplight:
            id: qwjmnh4wvaloq
          description: 'Fuelcoupon code for the used one. It is a conditional field, present only if the payment mode require it. Eg: is not present for card transactions or credit card'
        fuelcoupon_number:
          type: number
          x-stoplight:
            id: gsoy8w7uzlahf
          description: Fuelcoupon number
        stan:
          type: integer
          x-stoplight:
            id: 20do2krt8763q
          description: Incremental number representing the operation number. Each payment represent an operation
        customer_data:
          type: object
          x-stoplight:
            id: sxetioh0u98r5
          description: 'Contains all the customer data like km, driver code and all the data inserted by the user during card transaction'
          properties:
            driver_code:
              type: integer
              x-stoplight:
                id: 3hx2734mgy077
              description: Represent the driver code inserted by the user
            km:
              type: integer
              x-stoplight:
                id: 3p12l8mar7y5x
              description: Represent the Km inserted by the user
        discounted_amount:
          type: number
          x-stoplight:
            id: 7ivhuiiwxjxj9
          description: Conditional data - Present only if there's a discount applied. Representing the amount with applied discount
        discounted_value:
          type: number
          x-stoplight:
            id: h6i50qum9ba15
          description: Conditional data - Present only if there's a discount applied. Representing the applied discount value on unit price
        amount:
          type: number
          x-stoplight:
            id: y0ntmvc31pim1
          description: Payment amount
        date_time:
          type: string
          x-stoplight:
            id: dirx8g64qyvsh
          description: Payment operation timestamp
        progressive_number:
          type: integer
          x-stoplight:
            id: 1x9l93fotm4qm
          description: Progressive number of product
        article_id:
          type: integer
          x-stoplight:
            id: 7lhmke4a83hsu
          description: Product identifier
        ov_supply_id:
          type: number
          x-stoplight:
            id: z22f4glr6sbuo
          description: 'Conditional field, representing the supply identifier selected by the user. It is present only if data-collection is enabled on fuelstation'
        article_name:
          type: string
          x-stoplight:
            id: yk24a2i8sk9bb
          description: Product name to print on receipt
        unit_price:
          type: number
          x-stoplight:
            id: 5cf3l1tz3it42
          description: Bought product unit price
        measure_unit:
          type: string
          x-stoplight:
            id: 4szw5mq10d1gp
          description: Bought product measure unit
        is_oil:
          type: boolean
          x-stoplight:
            id: g1v2zjg9994d9
          description: 'If true, is an oil product, otherwise is a not oil product'
        quantity:
          type: number
          x-stoplight:
            id: rj7csmtw05rk8
          description: Bought product quantity
        auth_code:
          type: string
          x-stoplight:
            id: qml1eb01074rh
          description: Six digits authorization code
  securitySchemes:
    Cognito:
      type: oauth2
      flows:
        password:
          tokenUrl: ''
          refreshUrl: ''
          scopes: {}
      description: ''
  responses: {}
security:
  - Cognito: []
